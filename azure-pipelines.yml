resources:
  containers:
  - container: golang
    image: devcrewsacr.azurecr.io/operator-sdk-builder:latest
    endpoint: AzureCR

  - container: docker
    image: devcrewsacr.azurecr.io/docker-builder:latest
    endpoint: AzureCR
    options: '-v /usr/bin/docker:/usr/bin/docker -v /var/run/docker.sock:/var/run/docker.sock'

# trigger:
#   paths:
#     exclude:
#     - assets/*
#     - deploy/*

name: $(Date:yyyyMMdd)$(Rev:r)
  
jobs:      
######################################################################
# Build
######################################################################
  - job: Build
    container: golang
    displayName: Build Operator
    steps:

      - bash: |
          if [ -f vendor ]; then
            echo "##vso[task.setVariable variable=VENDOREXISTS]true"
          fi

      - script: go mod vendor
        condition: eq(variables.VENDOREXISTS, 'true')

      - script: go build cmd/manager/main.go
        

######################################################################
# Tests
######################################################################
  - job: UnitTests
    container: golang
    displayName: Run unit tests
    dependsOn: Build
    steps:
      - bash: |
          if [ -f vendor ]; then
            echo "##vso[task.setVariable variable=VENDOREXISTS]true"
          fi

      - script: go mod vendor
        condition: eq(variables.VENDOREXISTS, 'true')

      - script: go test -cover $(go list ./...)

######################################################################
# Container Creation
######################################################################
  - job: Containerize
    container: docker
    displayName: Build and push container
    dependsOn: UnitTests
    variables:
      OperatorImage: devcrewsacr.azurecr.io/public/k8s/bedrock/ring-operator
      MyBuildId: $(Date:yyyyMMdd)$(Rev:r)
    steps:
      # - script: |
      #       set -ex
      #       sudo groupadd -o -g $(stat --format='%g' /var/run/docker.sock) docker
      #       sudo usermod -a -G docker $(whoami)
      #   displayName: Allow current user to access the docker socket

      - task: Docker@2
        displayName: Login to Azure Container Registry
        inputs:
          command: login
          azureSubscriptionEndpoint: AzureRM
          containerRegistry: AzureCR
      
      # - script: operator-sdk build $(OperatorImage):$(MyBuildId)
      - script: operator-sdk build $(OperatorImage):$(latest)
      - script: | 
            # docker push $(OperatorImage):$(MyBuildId)
            docker push $(OperatorImage):latest