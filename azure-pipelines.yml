resources:
  containers:
  - container: golang
    image: devcrewsacr.azurecr.io/operator-sdk-builder:latest
    endpoint: AzureCR

  - container: docker
    image: devcrewsacr.azurecr.io/docker-builder:latest
    endpoint: AzureCR
    options: '-v /usr/bin/docker:/usr/bin/docker -v /var/run/docker.sock:/var/run/docker.sock'

# trigger:
#   paths:
#     exclude:
#     - assets/*
#     - deploy/*

name: $(Date:yyyyMMdd)$(Rev:r)
  
jobs:      
######################################################################
# Build
######################################################################
  - job: Build
    container: golang
    displayName: Build Operator
    steps:
      - task: CacheBeta@0
        inputs:
          key: |
            vendor
            $(Agent.OS)
            $(Build.SourcesDirectory)/go.sum
          path: $(Build.SourcesDirectory)/vendor
          cacheHitVar: CACHE_RESTORED
        displayName: Cache Vendor Directory
      
      - script: go mod vendor
        condition: ne(variables.CACHE_RESTORED, 'true')

      - script: go build cmd/manager/main.go

      - publish: $(Build.SourcesDirectory)/build
        artifact: build
        

######################################################################
# Tests
######################################################################
  - job: UnitTests
    container: golang
    displayName: Run unit tests
    dependsOn: Build
    steps:
      - task: CacheBeta@0
        inputs:
          key: |
            vendor
            $(Agent.OS)
            $(Build.SourcesDirectory)/go.sum
          path: $(Build.SourcesDirectory)/vendor
          cacheHitVar: CACHE_RESTORED
        displayName: Cache Vendor Directory
      
      - script: go mod vendor
        condition: ne(variables.CACHE_RESTORED, 'true')

      - script: go test -cover $(go list ./...)

######################################################################
# Container Creation
######################################################################
  - job: Containerize
    displayName: Build and push container
    dependsOn: UnitTests
    variables:
      OperatorImage: devcrewsacr.azurecr.io/public/k8s/bedrock/ring-operator
      MyBuildId: $(Date:yyyyMMdd)$(Rev:r)
    steps:
      # - script: |
      #       set -ex
      #       sudo groupadd -o -g $(stat --format='%g' /var/run/docker.sock) docker
      #       sudo usermod -a -G docker $(whoami)
      #   displayName: Allow current user to access the docker socket
      # - checkout: none
      # - download:
      #   artifact: 
      - download: current
        artifact: build

      - task: Docker@2
        displayName: Login to Azure Container Registry
        inputs:
          command: login
          azureSubscriptionEndpoint: AzureRM
          containerRegistry: AzureCR
      
      - task: Docker@2
        displayName: Build and Push
        inputs:
          command: buildAndPush
          containerRegistry: AzureCR
          repository: $(OperatorImage)
          tags: latest